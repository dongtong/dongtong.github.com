---
layout: post
title: "什么是Getting Real?"
date: 2012-09-09 23:17
comments: true
categories: [Getting Real记]
---

Getting Real 是一种更小规模,更快速,更高质量的软件构建方法。

* Getting Real 是关于省略所有表达现实(图表,曲线,矩形,箭头,统计图),而构 建现实。
* Getting real 是追求精炼。更少的代码量,更少的软件,更少的功能,更少的文档工作, 更少无所谓的东西(而且大部分你认为必要的,其实不是)。
* Getting Real 是保持精益,变得敏捷。
* Getting Real 从界面开始,也就是用户使用的屏幕。它从实际的用户体验开始,并且
   构建似曾相识的体验。这让你在软件误入歧途之前得到正确的用户界面。
* Getting Real 是关于迭代和降低变化成本的方法。Getting Real 基本上是关于上线,调
整,持续改进,其目标的开发 Web 软件的最佳途径。
* Getting Real 只交付客户所需的,摒弃任何客户不需要的。
<!--More-->

Getting Real 能够交付更好的结果,是因为它强迫你处理真正要解决的问题,而不是关于那
些问题的空想。它迫使你面对当下。

Getting Real 更注重实际的用户界面,而不是功能规格说明书和其他昙花一现的文档。只有 当一个真实的网页呈现出来,相关的功能规格才是可信的,被证明是可接受 的。那才是是 我们的客户将要看到和使用的。那才是需要关心的。Getting Real 帮助你更快达到这个目的。 并且那意味着你正在基于真实需求,而不是异想天开来构建软件。

最后,Getting Real 是适合于 Web 软件的理想途径。那种把软件包装在盒子里,再等一年到 两年才发布一个更新的学院派方法已经过时了。不像需要安装的软件,Web 应用能够以天为 单位持续改进。Getting Real 利用了这种优势来提升 Web 应用的价值。

Getting Real 除掉...。

* 花费数月,甚至数年的进度表。 
* 不切实际的功能规格文档。
* 可伸缩性的争论。
* 又臭又长的员工大会。
* 大量招人的需求。
* 毫无意义的版本号。
* 憧憬完美未来的幼稚“路线图”。
* 无穷尽的偏好设置选项。
* 外包支持。
* 不切实际的用户测试。 
* 写无用文档。
* 自顶向下的管理结构。
你不需要成吨的钞票或者庞大的团队或者漫长的开发周期来构建伟大的软件。那些正是缓慢, 晦涩,变化成本高昂的应用程序的帮凶。Getting real 反其道而行之。

<<摘自 37signals Getting Real>>


